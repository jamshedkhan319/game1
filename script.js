// ‡¶ó‡ßá‡¶Æ ‡¶∏‡ßç‡¶ü‡ßá‡¶ü
let currentPlayer = "X";
let boardState = Array(9).fill(null);
let isClickSoundEnabled = true;
let isWinDrawSoundEnabled = true;

// HTML ‡¶è‡¶≤‡¶ø‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ó‡ßÅ‡¶≤‡ßã ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶®
const board = document.getElementById("board");
const statusText = document.getElementById("status");
const resetButton = document.getElementById("reset");
const clickSound = document.getElementById("click-sound");
const winSound = document.getElementById("win-sound");
const drawSound = document.getElementById("draw-sound");
const settingsIcon = document.getElementById("settings-icon");
const settingsMenu = document.getElementById("settings-menu");
const clickSoundIcon = document.getElementById("click-sound-icon");
const winDrawSoundIcon = document.getElementById("win-draw-sound-icon");

// ‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ
function createBoard() {
  board.innerHTML = "";
  for (let i = 0; i < 9; i++) {
    const cell = document.createElement("div");
    cell.className = "cell";
    cell.dataset.index = i;
    board.appendChild(cell);
  }
}

// ‡¶ó‡ßá‡¶Æ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶æ
function startGame() {
  createBoard();
  currentPlayer = "X";
  boardState = Array(9).fill(null);
  statusText.textContent = "Player X ‡¶è‡¶∞ ‡¶™‡¶æ‡¶≤‡¶æ";
  addEventListeners();
}

// ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶≤‡¶ø‡¶∏‡ßá‡¶®‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ
function addEventListeners() {
  const cells = document.querySelectorAll(".cell");
  cells.forEach((cell) => {
    cell.addEventListener("click", handleMove);
  });
  resetButton.addEventListener("click", startGame);

  // ‡¶∏‡ßá‡¶ü‡¶ø‡¶Ç‡¶∏ ‡¶Æ‡ßá‡¶®‡ßÅ ‡¶ü‡¶ó‡¶≤ ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞
  settingsIcon.addEventListener("click", () => {
    settingsMenu.classList.toggle("hidden");
  });

  // ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶∏‡¶æ‡¶â‡¶®‡ßç‡¶° ‡¶ü‡¶ó‡¶≤
  clickSoundIcon.addEventListener("click", () => {
    isClickSoundEnabled = !isClickSoundEnabled;
    clickSoundIcon.textContent = isClickSoundEnabled ? "üîà" : "üîá";
  });

  // ‡¶â‡¶á‡¶®/‡¶°‡ßç‡¶∞ ‡¶∏‡¶æ‡¶â‡¶®‡ßç‡¶° ‡¶ü‡¶ó‡¶≤
  winDrawSoundIcon.addEventListener("click", () => {
    isWinDrawSoundEnabled = !isWinDrawSoundEnabled;
    winDrawSoundIcon.textContent = isWinDrawSoundEnabled ? "üîà" : "üîá";
  });
}

// ‡¶ñ‡ßá‡¶≤‡ßã‡¶Ø‡¶º‡¶æ‡¶°‡¶º‡ßá‡¶∞ ‡¶ö‡¶æ‡¶≤
function handleMove(e) {
  const cell = e.target;
  const index = cell.dataset.index;

  if (boardState[index] === null) {
    boardState[index] = currentPlayer;
    cell.textContent = currentPlayer;
    cell.classList.add("taken");

    if (isClickSoundEnabled) clickSound.play();

    if (checkWinner()) {
      statusText.textContent = `Player ${currentPlayer} ‡¶¨‡¶ø‡¶ú‡¶Ø‡¶º‡ßÄ! üéâ`;
      if (isWinDrawSoundEnabled) winSound.play();
      disableBoard();
    } else if (boardState.every((cell) => cell !== null)) {
      statusText.textContent = "‡¶°‡ßç‡¶∞ ‡¶π‡ßü‡ßá‡¶õ‡ßá!";
      if (isWinDrawSoundEnabled) drawSound.play();
    } else {
      currentPlayer = currentPlayer === "X" ? "O" : "X";
      statusText.textContent = `Player ${currentPlayer} ‡¶è‡¶∞ ‡¶™‡¶æ‡¶≤‡¶æ`;
    }
  }
}

// ‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶°‡¶ø‡¶ú‡ßá‡¶¨‡¶≤ ‡¶ï‡¶∞‡¶æ
function disableBoard() {
  const cells = document.querySelectorAll(".cell");
  cells.forEach((cell) => {
    cell.style.pointerEvents = "none";
  });
}

// ‡¶¨‡¶ø‡¶ú‡¶Ø‡¶º‡ßÄ ‡¶®‡¶ø‡¶∞‡ßç‡¶ß‡¶æ‡¶∞‡¶£
function checkWinner() {
  const winningCombinations = [
    [0, 1, 2],
    [3, 4, 5],
    [6, 7, 8],
    [0, 3, 6],
    [1, 4, 7],
    [2, 5, 8],
    [0, 4, 8],
    [2, 4, 6],
  ];

  return winningCombinations.some((combination) => {
    const [a, b, c] = combination;
    return (
      boardState[a] &&
      boardState[a] === boardState[b] &&
      boardState[a] === boardState[c]
    );
  });
}

// ‡¶ó‡ßá‡¶Æ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶æ
startGame();
